.cart {
    --cart-header-height: 50px;
    position: relative;
    z-index: 2000;
    background-color: white;
    border-radius: var(--radius-small);
    overflow: hidden;
    box-shadow: var(--shadow-4dp);
    max-width: 80vw;
    max-height: 80vh;
    width: 1300px;
    height: 500px;
    display: flex;
    flex-flow: column nowrap;
    padding-top: var(--cart-header-height);

    &-header {
        position: absolute;
        height: var(--cart-header-height);
        display: flex;
        justify-content: center;
        align-items: center;
        color: white;
        text-transform: uppercase;
        width: 100%;
        top: 0;
        background-color: var(--bg-color-header);
        box-shadow: var(--shadow-3dp);
    }

    &-items {
        // pushes footer to the bottom
        margin-bottom: auto;
        overflow-y: auto;
        flex-grow: 1;
    }

    &-items,
    &-footer {
        padding: 1.5rem;
    }

    &-footer {
        border-top: 1px solid #888;
        display: flex;
        flex-direction: row;
        align-items: center;
        span {
            font-weight: 700;
            text-transform: uppercase;
            margin-left: auto;
            margin-right: 0.5rem;
        }
    }

    &-total {
        // font-size: 1.25rem;
        display: flex;
        flex-flow: row nowrap;
        position: relative;

        &-regular {
            font-size: 0.95rem;
            display: inline-block;

            &.strike {
                margin-bottom: 0;
                position: absolute;
                top: -1rem;
                text-decoration: line-through;
                opacity: 0.5;
                font-size: 0.85rem;
            }
        }
    }
}

.btn-checkout {
    border: 1px solid var(--bg-color-accent);
    color: var(--bg-color-accent);
    padding: 1rem 2rem;
    cursor: pointer;
    background-color: transparent;
    border-radius: var(--radius-medium);
    font-weight: 700;
    text-transform: uppercase;
    transition: background-color 0.25s, color 0.25s;
    &:hover {
        background-color: var(--bg-color-accent);
        color: white;
    }
}

.cart-header-btn-close {
    // when  multiple rules depend on a specific value, it makes sense to create a CSS Variable
    --modal-btn-close-size: calc(var(--cart-header-height) * 0.7);
    font-size: var(--modal-btn-close-size);
    line-height: calc(var(--modal-btn-close-size) / 2);
    width: var(--modal-btn-close-size);
    height: var(--modal-btn-close-size);
    position: absolute;
    right: calc(var(--cart-header-height) / 4);
    background: none;
    border: none;
    outline: none;
    padding: 0;
    color: white;
    cursor: pointer;
    border-radius: 50%;

    &::before {
        content: 'âœ–';
    }
}

// A way to change styles for different screen size to make it look nicer
// A real app should ideally still look presentable for devices with 320px screen width (iPhone 5 for example)
// If you follow the "Mobile First" approach you would start "the other way around" and style for mobile
// and only then use media queries to change styles for tablet and desktop (usually using min-width and px as condition).
// the reason for this is that small devices have less processing power and media queries come with a bit of a cost
// (Note: here we are NOT using a mobile first approach, this is more of a hotfix done at the end)
@media (max-width: 600px) {
    .cart {
        max-width: 95vw;
        max-height: 95vh;

        &-items {
            padding: 0.75rem 0.5rem;
        }

        .btn-checkout {
            padding: 0.75rem 1rem;
        }

        &-footer {
            &-total {
                font-size: 0.9rem;
                span {
                    font-weight: 700;
                    text-transform: uppercase;
                }
            }
        }
    }
}
